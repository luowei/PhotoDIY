name: Swift Version - Build and Deploy to TestFlight

on:
  push:
    branches:
      - swift
    paths:
      - 'Swift/**'
  pull_request:
    branches:
      - swift
    paths:
      - 'Swift/**'
  workflow_dispatch:

env:
  XCODE_VERSION: '15.0'
  IOS_DEPLOYMENT_TARGET: '15.0'
  PROJECT_PATH: 'Swift/Photofy.xcodeproj'
  SCHEME: 'Photofy'

jobs:
  test:
    name: Run Tests
    runs-on: macos-14

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer

      - name: Show Xcode Version
        run: xcodebuild -version

      - name: Run Unit Tests
        run: |
          xcodebuild test \
            -project ${{ env.PROJECT_PATH }} \
            -scheme ${{ env.SCHEME }} \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
            -resultBundlePath ${{ runner.temp }}/TestResults.xcresult

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test-Results
          path: ${{ runner.temp }}/TestResults.xcresult
          retention-days: 7

  build-and-deploy:
    name: Build Swift and Deploy to TestFlight
    runs-on: macos-14
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer

      - name: Show Xcode Version
        run: xcodebuild -version

      - name: Show Swift Version
        run: swift --version

      - name: Import Code Signing Certificates
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATE_P12 }}
          p12-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}

      - name: Download Provisioning Profiles
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$PROVISIONING_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: Increment Build Number
        run: |
          cd Swift/Photofy
          BUILD_NUMBER=${{ github.run_number }}

          # Update build number in project
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $BUILD_NUMBER" Info.plist || \
          /usr/libexec/PlistBuddy -c "Add :CFBundleVersion string $BUILD_NUMBER" Info.plist

          echo "Build number set to: $BUILD_NUMBER"

      - name: Build Archive
        run: |
          xcodebuild archive \
            -project ${{ env.PROJECT_PATH }} \
            -scheme ${{ env.SCHEME }} \
            -configuration Release \
            -archivePath ${{ runner.temp }}/Photofy.xcarchive \
            -destination 'generic/platform=iOS' \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM=${{ secrets.APPLE_TEAM_ID }} \
            CODE_SIGN_IDENTITY="${{ secrets.CODE_SIGN_IDENTITY }}" \
            PROVISIONING_PROFILE_SPECIFIER="${{ secrets.PROVISIONING_PROFILE_NAME }}"

      - name: Export IPA
        run: |
          # Create export options plist
          cat > ${{ runner.temp }}/ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>${{ secrets.APPLE_TEAM_ID }}</string>
            <key>uploadSymbols</key>
            <true/>
            <key>uploadBitcode</key>
            <false/>
            <key>compileBitcode</key>
            <false/>
            <key>destination</key>
            <string>export</string>
          </dict>
          </plist>
          EOF

          xcodebuild -exportArchive \
            -archivePath ${{ runner.temp }}/Photofy.xcarchive \
            -exportPath ${{ runner.temp }}/export \
            -exportOptionsPlist ${{ runner.temp }}/ExportOptions.plist

      - name: Upload to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        run: |
          # Create API key file
          mkdir -p ~/private_keys
          echo "$APP_STORE_CONNECT_API_KEY" | base64 --decode > ~/private_keys/AuthKey_$APP_STORE_CONNECT_API_KEY_ID.p8

          xcrun altool --upload-app \
            --type ios \
            --file ${{ runner.temp }}/export/*.ipa \
            --apiKey $APP_STORE_CONNECT_API_KEY_ID \
            --apiIssuer $APP_STORE_CONNECT_ISSUER_ID

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Photofy-Swift-IPA
          path: ${{ runner.temp }}/export/*.ipa
          retention-days: 30

      - name: Upload Archive Artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Photofy-Swift-Archive
          path: ${{ runner.temp }}/Photofy.xcarchive
          retention-days: 7

      - name: Upload dSYM for Crash Analytics
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Photofy-dSYMs
          path: ${{ runner.temp }}/Photofy.xcarchive/dSYMs
          retention-days: 90
